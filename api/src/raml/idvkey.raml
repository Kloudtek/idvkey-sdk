#%RAML 0.8
title: IDVKey API
version: 0.91
baseUri: https://api.github.com/api
protocols: [ HTTPS ]
securitySchemes:
  - x-kryptotek: !include kryptotek-httpauth.raml
/services:
  description: Retrieve the list of owned websites/services
  get:
    responses:
      200:
        body:
          application/json:
  /{serviceId}:
    /linked:
      post:
        description: Request a user for his permission to link him to a customer service/website.
        queryParameters:
          userRef:
            description: User reference to assign user
          redirectUrl:
            description: URL to redirect user to after he's successfully approved linking
          cancelUrl:
            description: URL to redirect user if he decides to deny the link
        responses:
          201:
            description: User has been successfully linked
          409:
            description: User ref already associated with a user
          404:
            description: Service does not exist
      /{userRef}:
        get:
          description: Get a user's link state.
          responses:
            200:
              description: User is currently linked
              body:
                application/json:
            404:
              description: User is not linked, or service does not exist
        delete:
          description: Delete user link
          responses:
            201:
              description: User was unlinked
            404:
              description: User is not linked, or service does not exist
              body:
                text/plain:
                  description: Error details
    /notifications:
      /authentication:
        post:
          description: Request user authentication
          queryParameters:
            redirectUrl:
              description: URL to redirect user to after he's successfully approved linking
            cancelUrl:
              description: URL to redirect user if he decides to deny the link
          responses:
            200:
              body:
                text/plain:
                  description: operation id (opId) that will be used to check the status on the request
            404:
              description: service not found
      /approval:
        post:
            description: Request user approval
            responses:
              200:
                body:
                  text/plain:
                    description: operation id (opId) that will be used to check the status on the request
              404:
                description: service not found
/notifications/:
  /authentication/:
    /{opId}:
      get:
        description: Retrieve the authentication's status (and response if exists)
        responses:
          200:
            body:
              application/json:
          404:
            description: authentication or service not found
            body:
              text/plain:
                description: Error details
  /approval/:
    /{opId}:
      get:
        description: Retrieve the approval's status
        responses:
          200:
            body:
              text/plain:
                description: one of the following values: PENDING, APPROVED, DENIED
          404:
            description: notification not found
            body:
              text/plain:
                description: Error details
